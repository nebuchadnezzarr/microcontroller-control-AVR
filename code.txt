7.	Исходный код программы

; ******************************************************
; BASIC .ASM template file for AVR
; ******************************************************

.include "C:\VMLAB\include\m8def.inc"

; Define here the variables
;
.def  temp  =r16

; Define here Reset and interrupt vectors, if any
;
RJMP METKA1   ;метка для начальных условий
.ORG 0x0003  ;адрес, по которому располагаются прерывания
RJMP BREAK1  ;метка для обработки прерываний


METKA1  :      ;начальные условия
LDI R17, 200  ;начальный период ШИМ (выбирается заранее)
LDI R16, HIGH(RAMEND)  ; инициализация стека
OUT SPH, R16
LDI R16, LOW(RAMEND)
OUT SPL, R16


LDI R16, 1<<OCIE2      ;разрешение прерываний по совпадению
OUT TIMSK, R16         ;
LDI R16, (1<<WGM21) | (1<<CS22) | (1<<CS21) | (1<<CS20)
OUT TCCR2, R16  ;                ;задание предделителя
LDI R18, 0      ;число тактов, до которого будет производиться подсчет и дальнейшее прерывание
OUT OCR2, R18   ;
LDI R16, (1<<PB2)  ; выбор порта
OUT DDRB, R16      ;
OUT PORTB, R16 ; на выход подается высокий уровень сигнала

SEI   ;разрешение глобальных прерываний



RJMP START  ;цикл для работы
START :
BRCC START  ;отработка начала цикла до следующего прерывания
BREAK1 :   ;обработка прерываний
LDI R19, 90   ;в R19 записываем такты низкого уровня
SUB R17, R19  ;в R17 записываем такты высокого уровня
MOV R20, R16  ;сохранение уровня поступившего сигнала
LDI R16, (1<<PB2) ;подаем высокий уровень сигнала
OUT PORTB, R16    ;
SUB R16, R20    ;с помощью разности сигналов получаем необходимый
OUT PORTB, R16  ;подаем на выход необходимый уровень сигнала
SBIS PORTB, 7  ; сравнение с высоким уровнем, если он уровень высокий - выполняем
OUT OCR2, R19  ; задание тактов низкого уровня
SBIC PORTB, 7 ; сравнение с низким уровнем, если уровень низкий - выполняем
OUT OCR2, R17  ; задание тактов высокого уровня
LDI R17, 200  ;возвращение начального числа тактов

RETI  ;выход из прерывания

